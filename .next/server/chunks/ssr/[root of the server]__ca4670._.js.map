{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/xconfess/app/dashboard/messages/page.js"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:5000\"); // Replace with your backend URL\n\nexport default function Messages() {\n\tconst [users, setUsers] = useState([\n\t\t{ id: 1, name: \"John Doe\" },\n\t\t{ id: 2, name: \"Jane Smith\" },\n\t]); // Dummy user list\n\tconst [selectedUser, setSelectedUser] = useState(null);\n\tconst [messages, setMessages] = useState([]);\n\tconst [newMessage, setNewMessage] = useState(\"\");\n\n\t// Fetch previous messages (if stored in DB)\n\tuseEffect(() => {\n\t\tsocket.on(\"receiveMessage\", (message) => {\n\t\t\tsetMessages((prevMessages) => [...prevMessages, message]);\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocket.off(\"receiveMessage\");\n\t\t};\n\t}, []);\n\n\tconst sendMessage = () => {\n\t\tif (newMessage.trim() === \"\") return;\n\n\t\tconst messageData = {\n\t\t\tsender: \"User1\", // Replace with logged-in user's ID\n\t\t\treceiver: selectedUser?.id,\n\t\t\ttext: newMessage,\n\t\t\ttimestamp: new Date().toISOString(),\n\t\t};\n\n\t\t// Send message to the server\n\t\tsocket.emit(\"sendMessage\", messageData);\n\t\tsetMessages((prevMessages) => [...prevMessages, messageData]);\n\t\tsetNewMessage(\"\");\n\t};\n\n\treturn (\n\t\t<div className=\"flex h-screen bg-black text-white\">\n\t\t\t{/* User List */}\n\t\t\t<div className=\"w-1/4 bg-gray-900 p-4 border-r border-gray-700\">\n\t\t\t\t<h2 className=\"text-xl font-bold text-pink-500\">Users</h2>\n\t\t\t\t<ul>\n\t\t\t\t\t{users.map((user) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\t\tclassName={`p-2 rounded cursor-pointer ${\n\t\t\t\t\t\t\t\tselectedUser?.id === user.id\n\t\t\t\t\t\t\t\t\t? \"bg-pink-500\"\n\t\t\t\t\t\t\t\t\t: \"hover:bg-gray-700\"\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tonClick={() => setSelectedUser(user)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t{/* Chat Section */}\n\t\t\t<div className=\"flex-1 flex flex-col\">\n\t\t\t\t{selectedUser ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"p-4 bg-gray-900 border-b border-gray-700\">\n\t\t\t\t\t\t\t<h2 className=\"text-xl font-bold\">\n\t\t\t\t\t\t\t\t{selectedUser.name}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex-1 p-4 overflow-y-auto space-y-2\">\n\t\t\t\t\t\t\t{messages.map((msg, index) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tclassName={`p-2 rounded-lg ${\n\t\t\t\t\t\t\t\t\t\tmsg.sender === \"User1\"\n\t\t\t\t\t\t\t\t\t\t\t? \"bg-pink-500 self-end text-right\"\n\t\t\t\t\t\t\t\t\t\t\t: \"bg-gray-700 self-start\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<p>{msg.text}</p>\n\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-gray-400\">\n\t\t\t\t\t\t\t\t\t\t{new Date(\n\t\t\t\t\t\t\t\t\t\t\tmsg.timestamp\n\t\t\t\t\t\t\t\t\t\t).toLocaleTimeString()}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"p-4 bg-gray-900 border-t border-gray-700 flex\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={newMessage}\n\t\t\t\t\t\t\t\tonChange={(e) => setNewMessage(e.target.value)}\n\t\t\t\t\t\t\t\tplaceholder=\"Type a message...\"\n\t\t\t\t\t\t\t\tclassName=\"flex-1 bg-gray-800 text-white p-2 rounded-l-lg focus:outline-none\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={sendMessage}\n\t\t\t\t\t\t\t\tclassName=\"bg-pink-500 px-4 py-2 rounded-r-lg hover:bg-pink-600 transition\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"flex-1 flex items-center justify-center\">\n\t\t\t\t\t\t<p className=\"text-gray-400\">\n\t\t\t\t\t\t\tSelect a user to chat with\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAHA;;;;AAKA,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B,gCAAgC;AAE7D,SAAS;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAClC;YAAE,IAAI;YAAG,MAAM;QAAW;QAC1B;YAAE,IAAI;YAAG,MAAM;QAAa;KAC5B,GAAG,kBAAkB;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,4CAA4C;IAC5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACT,OAAO,EAAE,CAAC,kBAAkB,CAAC;YAC5B,YAAY,CAAC,eAAiB;uBAAI;oBAAc;iBAAQ;QACzD;QAEA,OAAO;YACN,OAAO,GAAG,CAAC;QACZ;IACD,GAAG,EAAE;IAEL,MAAM,cAAc;QACnB,IAAI,WAAW,IAAI,OAAO,IAAI;QAE9B,MAAM,cAAc;YACnB,QAAQ;YACR,UAAU,cAAc;YACxB,MAAM;YACN,WAAW,IAAI,OAAO,WAAW;QAClC;QAEA,6BAA6B;QAC7B,OAAO,IAAI,CAAC,eAAe;QAC3B,YAAY,CAAC,eAAiB;mBAAI;gBAAc;aAAY;QAC5D,cAAc;IACf;IAEA,qBACC,8OAAC;QAAI,WAAU;;0BAEd,8OAAC;gBAAI,WAAU;;kCACd,8OAAC;wBAAG,WAAU;kCAAkC;;;;;;kCAChD,8OAAC;kCACC,MAAM,GAAG,CAAC,CAAC,qBACX,8OAAC;gCAEA,WAAW,CAAC,2BAA2B,EACtC,cAAc,OAAO,KAAK,EAAE,GACzB,gBACA,qBACF;gCACF,SAAS,IAAM,gBAAgB;0CAE9B,KAAK,IAAI;+BARL,KAAK,EAAE;;;;;;;;;;;;;;;;0BAehB,8OAAC;gBAAI,WAAU;0BACb,6BACA;;sCACC,8OAAC;4BAAI,WAAU;sCACd,cAAA,8OAAC;gCAAG,WAAU;0CACZ,aAAa,IAAI;;;;;;;;;;;sCAGpB,8OAAC;4BAAI,WAAU;sCACb,SAAS,GAAG,CAAC,CAAC,KAAK,sBACnB,8OAAC;oCAEA,WAAW,CAAC,eAAe,EAC1B,IAAI,MAAM,KAAK,UACZ,oCACA,0BACF;;sDAEF,8OAAC;sDAAG,IAAI,IAAI;;;;;;sDACZ,8OAAC;4CAAK,WAAU;sDACd,IAAI,KACJ,IAAI,SAAS,EACZ,kBAAkB;;;;;;;mCAXhB;;;;;;;;;;sCAgBR,8OAAC;4BAAI,WAAU;;8CACd,8OAAC;oCACA,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;oCAC7C,aAAY;oCACZ,WAAU;;;;;;8CAEX,8OAAC;oCACA,SAAS;oCACT,WAAU;8CACV;;;;;;;;;;;;;iDAMH,8OAAC;oBAAI,WAAU;8BACd,cAAA,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;;;;;;AAQnC"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}